// SPDX-License-Identifier: GPL-2.0-only
// Copyright (C) 2018 - 2021 Christian Neumanns, email: chris@pml-lang.dev

type PML_formal_node <node child_of:PML_node usage:in_out> factories:none

    java_header
        import dev.pdml.core.data.formalNode.FormalNode;
    end java_header

    java
        public FormalNode getPMDLFormalNode();
    end java

    inherit has_to_long_string

    attributes

        tags ordered_set<string>

        // attributes
        a_attributes formal_parameters<*> or null
        default_attribute_id parameter_id or null default:null
        HTML_attributes_allowed yes_no

        node_creator PML_node_creator<node>
        HTML_writer PML_node_HTML_writer<node>

        documentation simple_documentation
    .

    attributes_check
        if default_attribute_id is not null then
            check i_attributes #r null
            assert i_attributes is not null
            check i_attributes.contains_id ( default_attribute_id )
        .

        // since version 1.4.0: every node and every attribute must have exactly one id.
        // see https://github.com/pml-lang/converter/discussions/7#discussioncomment-505627

        check tags.size =v 1

        if attributes is not null then
            const formal_parameters map <key:parameter_id, value:formal_parameter<*>> = attributes.any_id_map type_check:no
            repeat for each value formal_parameter in formal_parameters
                check formal_parameter.ids.size =v 1
            .
        .
    .

    functions

        standard_tag -> string

        tags_as_string -> string

        has_attributes -> yes_no
    .
.
