// SPDX-License-Identifier: GPL-2.0-only
// Copyright (C) 2018 - 2021 Christian Neumanns, email: chris@pml-lang.dev

service formal_node_attributes

    att a_id formal_parameter<string or null> = formal_parameter<string or null>.create (
        ids = [# parameter_id.create ( se_PML_attribute_ids.id ) ]
        default_value_supplier = { null }
        value_parser = se_string_parser.instance
        documentation = simple_documentation.create (
            title = "Node Identifier"
            description = '''A unique identifier for the node.

An id can be used to:
- identify a node so that an internal link can be done with an 'xref' (cross reference) node.
- identify a node so that it can be styled individually with CSS
- create an HTML anchor so that it can be accessed with the # (hash) sign (e.g. writing id=foo will enable you to have an HTML link ending with #foo.

An identifier must start with a letter and can be followed by any number of letters, digits, and underscores. Note for programmers: The regex of an identifier is: [a-zA-Z][a-zA-Z0-9_]*. Identifiers are case-sensitive. The following identifiers are all different: name, Name, and NAME.'''

            examples = "id = basic_concept" ) )

    att caption formal_parameter<string or null> = formal_parameter<string or null>.create (
        ids = [# parameter_id.create ( se_PML_attribute_ids.caption ) ]
        default_value_supplier = { null }
        value_parser = se_string_parser.instance
        documentation = simple_documentation.create (
            title = "Node Caption"
            description = "An optional caption (small text) associated with the node. The caption is typically displayed below the node."
            examples = '''caption = "Better health through exercise!"''' ) )

    function optional_id_attributes -> formal_parameters<*>

        return formal_parameters_builder_with_optional_id.make_immutable
    .

    function formal_parameters_builder_with_optional_id -> any_type_formal_parameters_builder

        const r = any_type_formal_parameters_builder.create

        r.add_parameter ( a_id )

        return r
    .

.
