// SPDX-License-Identifier: GPL-2.0-only
// Copyright (C) 2018 - 2021 Christian Neumanns, email: chris@pml-lang.dev

type PML_node_creator_context

    attributes
        pXML_node mutable_PDML_AST_node
        formal_node PML_formal_node<*>
        non_HTML_attributes any_type_parameters or null
        HTML_attributes map<key:string, value:string or null> or null
        block_child_nodes list<PML_block_node> or null
        inline_child_nodes list<PML_inline_node> or null
        raw_text_content string or null

        current_chapter_level pos_32

        tree_context PML_tree_creator_context
    .

    functions

        // attribute getters

///
        get_attribute ( parameter_id ) -> node_attribute

        get_attribute_or_null ( parameter_id ) -> node_attribute or null
.///
        get_attribute_AST_or_null ( name string ) -> AST_node_attribute or null

        get_attribute_AST ( name string ) -> AST_node_attribute

        get_attribute_value<value> ( parameter_id ) -> t_value

        get_string_attribute ( parameter_id ) -> string

        get_string_or_null_attribute ( parameter_id ) -> string or null

        // TD needed?
        // try_get_string_attribute_or_default ( parameter_id, default string ) -> string

        get_yes_no_attribute ( parameter_id ) -> yes_no

        get_yes_no_or_null_attribute ( parameter_id ) -> yes_no or null

        // common attribute getters

        get_title -> string

        get_title_or_null -> string or null

        get_id_or_null -> string or null

        try_get_node_by_id ( node_id_attribute AST_node_attribute ) -> mutable_PDML_AST_node or null

        get_node_title_or_null ( node mutable_PDML_AST_node ) -> string or null

        non_null_raw_text_content -> string

        get_chapter_auto_id -> string

        require_single_text_child_node -> string // or anticipated_error

//        normalize_text_in_node_with_raw_text_content -> string // or PML_code_error

        remove_smallest_indent_in_all_lines_of_text ( text string ) -> string


        // error handling

        canceling_error -> text_error
            in id string
            in info string
            in token text_token or null
        .

        canceling_error_for_node -> text_error
            in id string
            in info string
        .

        non_canceling_error
            in id string
            in info string
            in token text_token or null
        .

        warning
            in id string
            in info string
            in token text_token or null
        .


///
        get_non_HTML_attributes ( node_AST mutable_PDML_AST_node ) -> any_type_parameters or PML_code_error

        get_HTML_attributes ( node_AST mutable_PDML_AST_node ) -> map<key:string, value:string or null> or null

        current_chapter_level -> pos_32

        increase_current_chapter_level

        decrease_current_chapter_level

        get_auto_chapter_id ( chapter_title string ) -> string

        title_of_existing_node_id -> string or null or PML_code_error
            in node_id string
            in node_AST mutable_PDML_AST_node
            in id_token PML_token
        .

        create_non_empty_child_block_nodes -> list<PML_block_node> or anticipated_error
            in node_AST mutable_PDML_AST_node
        .

        create_non_empty_child_inline_nodes -> list<PML_inline_node> or anticipated_error
            in node_AST mutable_PDML_AST_node
        .

        create_emptyable_child_block_nodes -> list<PML_block_node> or null or anticipated_error
            in node_AST mutable_PDML_AST_node
        .

        create_emptyable_child_inline_nodes -> list<PML_inline_node> or null or anticipated_error
            in node_AST mutable_PDML_AST_node
        .

        require_single_text_child_node ( node_AST mutable_PDML_AST_node ) -> PML_text_node or anticipated_error

        set_keep_whitespace_in_text ( value yes_no )

        normalize_text_in_node_with_raw_text_content ( node_AST mutable_PDML_AST_node ) -> string or PML_code_error

        remove_smallest_indent_in_all_lines_of_text ( text string ) -> string
.///
    .
.
