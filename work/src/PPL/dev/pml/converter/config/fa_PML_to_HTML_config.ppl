// SPDX-License-Identifier: GPL-2.0-only
// Copyright (C) 2018 - 2021 Christian Neumanns, email: chris@pml-lang.dev

factory PML_to_HTML_config

    functions

        PML_input_file

            case type of PML_input.resource
                when file f
                    return f
                otherwise
                    return null
            .
        .

        HTML_output_file = file.create_for_name ( file_name = a_HTML_output_file_name, directory = output_directory_path )

        TOC_position = get_priority_value<PML_TOC_position> (
            CLI_value = a_CLI_TOC_position
            document_value = a_document_TOC_position
            default_value =  PML_TOC_position.left )

        source_code_highlighter = get_priority_value<PML_source_code_highlighter> (
            CLI_value = a_CLI_source_code_highlighter
            document_value = a_document_source_code_highlighter
            default_value =  PML_source_code_highlighter.none )
    .

    functions access:private

        get_priority_value<value> -> t_value
            in CLI_value t_value or null
            in document_value t_value or null
            in default_value t_value

            if CLI_value is not null then
                return CLI_value
            .
            if document_value is not null then
                return document_value
            .
            return default_value
        .
    .


    creator create kind:in_all

    creator create_for_paths -> PML_to_HTML_config

        in root_directory_for_relative_path directory_path default:se_OS_directories.current_working_directory_path

        in PML_input_path absolute_or_relative_file_path
        in resources_directory_path absolute_or_relative_directory_path or null
        in user_defined_nodes_directory_paths list<absolute_or_relative_directory_path> or null
        in output_directory_path absolute_or_relative_directory_path
        in HTML_header_file_path absolute_or_relative_file_path or null
        in HTML_footer_file_path absolute_or_relative_file_path or null
//        in tag_start_stop_symbols string
        in omit_CSS yes_no default:se_PML_default_values.omit_CSS
        in open_file_cmd string or null default:null

        this.PML_input = file_string_supplier.create_for_absolute_or_relative_path (
            path = i_PML_input_path
            i_root_directory_for_relative_path )

        if i_resources_directory_path is not null then
            this.resources_directory_path = se_absolute_or_relative_directory_path.to_directory_path (
                path = i_resources_directory_path
                i_root_directory_for_relative_path )
        else
            this.resources_directory_path = null
        .

        this.output_directory_path = se_absolute_or_relative_directory_path.to_directory_path (
            path = i_output_directory_path
            i_root_directory_for_relative_path )

        this.HTML_output_file_name = \
            se_PML_default_values.HTML_output_file_name_for_input_file_name ( i_PML_input_path.name )

        this.HTML_header = file_string_supplier.create_for_absolute_or_relative_path_or_null (
            path = i_HTML_header_file_path
            i_root_directory_for_relative_path )

        this.HTML_footer = file_string_supplier.create_for_absolute_or_relative_path_or_null (
            path = i_HTML_footer_file_path
            i_root_directory_for_relative_path )

//        this.tag_start_stop_symbols = i_tag_start_stop_symbols

        this.omit_CSS = i_omit_CSS

        this.open_file_cmd = i_open_file_cmd

        const error_handler = ty_PML_to_HTML_config.error_handler.default
        this.error_handler = error_handler

        // this.user_defined_nodes = se_user_defined_test_nodes.create_test_nodes
        if i_user_defined_nodes_directory_paths is null then
            this.user_defined_nodes = null
        else
            this.user_defined_nodes = se_user_defined_nodes_parser.parse_directory_paths (
                directory_paths = i_user_defined_nodes_directory_paths
                error_handler )
        .

        return this
    .

    creator create_for_PML_file_path ( path absolute_or_relative_file_path ) -> PML_to_HTML_config

        return create (
            PML_input = file_string_supplier.create_for_absolute_or_relative_path ( i_path )
            HTML_output_file_name = se_PML_default_values.HTML_output_file_name_for_input_file_name ( i_path.name ) )
    .
.
