// SPDX-License-Identifier: GPL-2.0-only
// Copyright (C) 2018 - 2021 Christian Neumanns, email: chris@pml-lang.dev

factory write_form_to_OS_err__text_error_handler type:text_error_handler

    java_header
        import dev.pp.text.error.handler.TextErrorHandler;
        import dev.pp.text.error.TextError;

        import dev.pp.texttable.writer.pretty.utilities.TextErrorOrWarning_FormWriter;
    end java_header

    java
        private final TextErrorHandler textErrorHandler = TextErrorOrWarning_FormWriter.createErrorHandler();

        public TextErrorHandler getJavaTextErrorHandler() { return textErrorHandler; }
    end java

    functions

        handle_error
            java
                textErrorHandler.handleError ( i_error.getJavaTextError() );
            end java
        .

        handle_error_data

            handle_error ( fa_text_error.create ( id, info, token ) )
        .

        handle_warning
            java
                textErrorHandler.handleWarning ( i_warning.getJavaTextWarning() );
            end java
        .

        handle_warning_data

            handle_warning ( fa_text_warning.create ( id, info, token ) )
        .

        first_error native:yes
            java
                return fa_text_error.createFromJavaNullable ( textErrorHandler.firstError() );
            end java
        .
    .

    creator create kind:in_all

    tests
        const handler = fa_write_form_to_OS_err__text_error_handler.create
        handler.handle_error_data (
            id = "ID"
            info = "info"
            token = text_token.create (
                text = "token",
                location = text_location.create (
                    resource = null
                    line_number = 1L
                    column_number = 11L
                    parent_location = null ) ) )
    .
.
